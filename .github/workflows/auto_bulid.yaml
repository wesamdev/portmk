name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.12   # Choose your Python version

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build executable
      run: |
        pyinstaller --onedir --console --icon "icon.ico" app.py
        Copy-Item script.txt .\dist\app\script.txt
        Copy-Item template.port.json .\dist\app\template.port.json
        Copy-Item -Recurse GodotPCKExplorer .\dist\app\GodotPCKExplorer
        Copy-Item -Recurse fonts .\dist\app\fonts

    - name: Extract version from version.txt
      id: extract_version
      run: |
        if (Test-Path "version.txt") {
          $version = Get-Content "version.txt"
          Write-Host "##vso[task.setvariable variable=version]$version"
        } else {
          Write-Error "version.txt not found."
          exit 1
        }

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.12  # Choose your Python version

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install github-release-notes

    - name: Get changelog
      id: changelog
      run: |
        echo "::set-output name=changelog::$(github-release-notes ${{ secrets.GITHUB_TOKEN }})"

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: v${{ env.version }}
        release_name: Release v${{ env.version }}
        body: ${{ steps.changelog.outputs.changelog }}
        draft: false
        prerelease: true

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: PORTMK-${{ env.version }}
        path: dist
